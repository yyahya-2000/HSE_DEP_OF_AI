version: '3.4'
services:
  nginx:
    container_name: ai_hse_nginx${CONTAINERS_SUFFIX}
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        WEB_DOMAIN: ${WEB_DOMAIN}
        SSL_CERTIFICATE: ${SSL_CERTIFICATE}
        SSL_KEY: ${SSL_KEY}
        SUPERSET_DOMAIN: ${SUPERSET_DOMAIN}
        SUPERSET_SSL_CERTIFICATE: ${SUPERSET_SSL_CERTIFICATE}
        SUPERSET_SSL_KEY: ${SUPERSET_SSL_KEY}
    depends_on:
      - php
    logging:
      driver: syslog
      options:
        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
    networks:
      - frontend
    ports:
      - '${HTTP_PORT}:80'
      - '${HTTPS_PORT}:443'
    restart: unless-stopped
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./storage/public:/var/www/html/sites/default/files
  php:
    container_name: ai_hse_php${CONTAINERS_SUFFIX}
    build:
      context: .
      dockerfile: ./php/Dockerfile
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DRUPAL_TRUSTED_HOST: ${DRUPAL_TRUSTED_HOST}
      CONTAINERS_SUFFIX: ${CONTAINERS_SUFFIX}
    logging:
      driver: syslog
      options:
        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
    networks:
      - frontend
      - backend
    restart: unless-stopped
    volumes:
      #- ./drupal:/var/www/html
      - ./storage/public:/var/www/html/sites/default/files:rw
      - ./storage/private:/private:rw
  db:
    container_name: ai_hse_db${CONTAINERS_SUFFIX}
    image: postgres:14-alpine
    networks:
      - backend
    logging:
      driver: syslog
      options:
        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SUPERSET_DB=${POSTGRES_SUPERSET_DB}
    #ports:
      #- "5432:5432"
    restart: unless-stopped
    volumes:
      - ./storage/pgdata:/var/lib/postgresql/data
  superset:
    container_name: ai_hse_superset${CONTAINERS_SUFFIX}
    build:
      context: ./superset
      dockerfile: ./Dockerfile
    ports:
      - "${SUPERSET_PORT}:8088"
    logging:
      driver: syslog
      options:
        tag: "{{.DaemonName}}(image={{.ImageName}};name={{.Name}};id={{.ID}})"
    networks:
      - frontend
      - backend
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SUPERSET_DB=${POSTGRES_SUPERSET_DB}
    restart: unless-stopped
    volumes:
      - ./storage/ssdata:/app/superset_home
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
